version: "3"

services:
  mongo:
    build:
      context: ./
      dockerfile: custom-mongodb-dockerfile
    container_name: pev-db
    environment:
      - APP_PORT=${APP_PORT}
    volumes:
      # Sends HTTP request to the app's API, which then runs population via npm
      - ./src/database/populate/trigger-population.sh:/home/bin/trigger-population.sh
      # Runs above `trigger-population.sh` in detached and background way. It is called automatically by MongoDB container
      - ./src/database/populate/init-trigger-population.sh:/docker-entrypoint-initdb.d/init-trigger-population.sh
      - pev-storage:/data/db
  
  mail:
    image: mailhog/mailhog:v1.0.1
    container_name: pev-mail
    ports:
      - ${EMAIL_SMTP_PORT}:${EMAIL_SMTP_PORT}
      - ${EMAIL_HTTP_PORT}:${EMAIL_HTTP_PORT}

  node:
    build: ./
    image: fake-pev-shopping
    container_name: pev-app
    ports:
      - ${APP_PORT}:${APP_PORT}
    volumes:
      - ./:/app
    depends_on:
      - mongo
      - mail
  
  cypress:
    image: "cypress/included:9.1.1"
    container_name: pev-cypress
    depends_on:
      - node
    network_mode: "host"
    working_dir: /e2e
    environment:
      - DISPLAY ## `xhost +local:` command must first be run on the host computer
      - CYPRESS_BASE_URL=http://localhost:${APP_PORT}
      - CYPRESS_MAIL_PORT=${EMAIL_HTTP_PORT}
    entrypoint: "bash -c 'npx wait-on $${CYPRESS_BASE_URL} && npx nodemon --watch cypress/integration --watch cypress/support --exec \"prettier --write cypress/integration cypress/support && cypress run --headed\"'"
    volumes:
      - ./test/e2e/:/e2e
      - ./test/e2e/node_modules:/e2e/node_modules
      - .prettierrc:/e2e/.prettierrc
      - ./src/frontend/components/pages/_routes.js:/e2e/cypress/fixtures/_routes.js
      - ./dist/src/types.js:/e2e/cypress/fixtures/types.js
      - ./src/database/populate/initial-users.json:/e2e/cypress/fixtures/initial-users.json
  
volumes:
  pev-storage: